"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Cloud:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CloudEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Cloud.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    GCP: _Cloud.ValueType  # 0
    AWS: _Cloud.ValueType  # 1

class Cloud(_Cloud, metaclass=_CloudEnumTypeWrapper):
    """Setup"""

GCP: Cloud.ValueType  # 0
AWS: Cloud.ValueType  # 1
global___Cloud = Cloud

class _Role:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RoleEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Role.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASSISTANT: _Role.ValueType  # 0
    USER: _Role.ValueType  # 1

class Role(_Role, metaclass=_RoleEnumTypeWrapper):
    """Completion"""

ASSISTANT: Role.ValueType  # 0
USER: Role.ValueType  # 1
global___Role = Role

class _Status:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ONLINE: _Status.ValueType  # 0
    LOADING: _Status.ValueType  # 1
    PAUSED: _Status.ValueType  # 2
    ERROR: _Status.ValueType  # 3

class Status(_Status, metaclass=_StatusEnumTypeWrapper):
    """Workers"""

ONLINE: Status.ValueType  # 0
LOADING: Status.ValueType  # 1
PAUSED: Status.ValueType  # 2
ERROR: Status.ValueType  # 3
global___Status = Status

class _GpuType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _GpuTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GpuType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    A100: _GpuType.ValueType  # 0
    A100_80GB: _GpuType.ValueType  # 1
    T4: _GpuType.ValueType  # 2

class GpuType(_GpuType, metaclass=_GpuTypeEnumTypeWrapper): ...

A100: GpuType.ValueType  # 0
A100_80GB: GpuType.ValueType  # 1
T4: GpuType.ValueType  # 2
global___GpuType = GpuType

@typing_extensions.final
class Empty(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Empty = Empty

@typing_extensions.final
class SetupRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FILE_FIELD_NUMBER: builtins.int
    CLOUD_FIELD_NUMBER: builtins.int
    key_file: builtins.str
    cloud: global___Cloud.ValueType
    def __init__(
        self,
        *,
        key_file: builtins.str | None = ...,
        cloud: global___Cloud.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cloud", b"_cloud", "_key_file", b"_key_file", "cloud", b"cloud", "key_file", b"key_file"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cloud", b"_cloud", "_key_file", b"_key_file", "cloud", b"cloud", "key_file", b"key_file"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cloud", b"_cloud"]) -> typing_extensions.Literal["cloud"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key_file", b"_key_file"]) -> typing_extensions.Literal["key_file"] | None: ...

global___SetupRequest = SetupRequest

@typing_extensions.final
class CloudStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLOUD_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    cloud: global___Cloud.ValueType
    enabled: builtins.bool
    def __init__(
        self,
        *,
        cloud: global___Cloud.ValueType = ...,
        enabled: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cloud", b"cloud", "enabled", b"enabled"]) -> None: ...

global___CloudStatus = CloudStatus

@typing_extensions.final
class SetupResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    CLOUD_STATUS_FIELD_NUMBER: builtins.int
    message: builtins.str
    """Used for warnings when running on an outdated version."""
    @property
    def cloud_status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CloudStatus]: ...
    def __init__(
        self,
        *,
        message: builtins.str | None = ...,
        cloud_status: collections.abc.Iterable[global___CloudStatus] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_message", b"_message", "message", b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_message", b"_message", "cloud_status", b"cloud_status", "message", b"message"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message", b"_message"]) -> typing_extensions.Literal["message"] | None: ...

global___SetupResponse = SetupResponse

@typing_extensions.final
class Message(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROLE_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    role: global___Role.ValueType
    content: builtins.str
    def __init__(
        self,
        *,
        role: global___Role.ValueType = ...,
        content: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["content", b"content", "role", b"role"]) -> None: ...

global___Message = Message

@typing_extensions.final
class ChatCompletionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKER_NAME_FIELD_NUMBER: builtins.int
    MESSAGES_FIELD_NUMBER: builtins.int
    MAX_TOKENS_FIELD_NUMBER: builtins.int
    TOP_P_FIELD_NUMBER: builtins.int
    TOP_K_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    worker_name: builtins.str
    @property
    def messages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Message]: ...
    max_tokens: builtins.int
    top_p: builtins.float
    top_k: builtins.int
    temperature: builtins.float
    def __init__(
        self,
        *,
        worker_name: builtins.str = ...,
        messages: collections.abc.Iterable[global___Message] | None = ...,
        max_tokens: builtins.int | None = ...,
        top_p: builtins.float | None = ...,
        top_k: builtins.int | None = ...,
        temperature: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "_top_k", b"_top_k", "_top_p", b"_top_p", "max_tokens", b"max_tokens", "temperature", b"temperature", "top_k", b"top_k", "top_p", b"top_p"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "_top_k", b"_top_k", "_top_p", b"_top_p", "max_tokens", b"max_tokens", "messages", b"messages", "temperature", b"temperature", "top_k", b"top_k", "top_p", b"top_p", "worker_name", b"worker_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_tokens", b"_max_tokens"]) -> typing_extensions.Literal["max_tokens"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_temperature", b"_temperature"]) -> typing_extensions.Literal["temperature"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_top_k", b"_top_k"]) -> typing_extensions.Literal["top_k"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_top_p", b"_top_p"]) -> typing_extensions.Literal["top_p"] | None: ...

global___ChatCompletionRequest = ChatCompletionRequest

@typing_extensions.final
class CompletionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKER_NAME_FIELD_NUMBER: builtins.int
    PROMPT_FIELD_NUMBER: builtins.int
    STOP_TOKENS_FIELD_NUMBER: builtins.int
    MAX_TOKENS_FIELD_NUMBER: builtins.int
    TOP_P_FIELD_NUMBER: builtins.int
    TOP_K_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    worker_name: builtins.str
    prompt: builtins.str
    @property
    def stop_tokens(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    max_tokens: builtins.int
    top_p: builtins.float
    top_k: builtins.int
    temperature: builtins.float
    def __init__(
        self,
        *,
        worker_name: builtins.str = ...,
        prompt: builtins.str = ...,
        stop_tokens: collections.abc.Iterable[builtins.str] | None = ...,
        max_tokens: builtins.int | None = ...,
        top_p: builtins.float | None = ...,
        top_k: builtins.int | None = ...,
        temperature: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "_top_k", b"_top_k", "_top_p", b"_top_p", "max_tokens", b"max_tokens", "temperature", b"temperature", "top_k", b"top_k", "top_p", b"top_p"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_max_tokens", b"_max_tokens", "_temperature", b"_temperature", "_top_k", b"_top_k", "_top_p", b"_top_p", "max_tokens", b"max_tokens", "prompt", b"prompt", "stop_tokens", b"stop_tokens", "temperature", b"temperature", "top_k", b"top_k", "top_p", b"top_p", "worker_name", b"worker_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_tokens", b"_max_tokens"]) -> typing_extensions.Literal["max_tokens"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_temperature", b"_temperature"]) -> typing_extensions.Literal["temperature"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_top_k", b"_top_k"]) -> typing_extensions.Literal["top_k"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_top_p", b"_top_p"]) -> typing_extensions.Literal["top_p"] | None: ...

global___CompletionRequest = CompletionRequest

@typing_extensions.final
class CompletionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    text: builtins.str
    def __init__(
        self,
        *,
        text: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["text", b"text"]) -> None: ...

global___CompletionResponse = CompletionResponse

@typing_extensions.final
class Model(google.protobuf.message.Message):
    """Models"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ARCHITECTURE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TOKENIZER_FIELD_NUMBER: builtins.int
    SYSTEM_PROMPT_FIELD_NUMBER: builtins.int
    INSTRUCTION_PREFIX_FIELD_NUMBER: builtins.int
    INSTRUCTION_POSTFIX_FIELD_NUMBER: builtins.int
    OUTPUT_PREFIX_FIELD_NUMBER: builtins.int
    OUTPUT_POSTFIX_FIELD_NUMBER: builtins.int
    architecture: builtins.str
    name: builtins.str
    tokenizer: builtins.str
    system_prompt: builtins.str
    instruction_prefix: builtins.str
    instruction_postfix: builtins.str
    output_prefix: builtins.str
    output_postfix: builtins.str
    def __init__(
        self,
        *,
        architecture: builtins.str = ...,
        name: builtins.str = ...,
        tokenizer: builtins.str = ...,
        system_prompt: builtins.str | None = ...,
        instruction_prefix: builtins.str | None = ...,
        instruction_postfix: builtins.str | None = ...,
        output_prefix: builtins.str | None = ...,
        output_postfix: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instruction_postfix", b"_instruction_postfix", "_instruction_prefix", b"_instruction_prefix", "_output_postfix", b"_output_postfix", "_output_prefix", b"_output_prefix", "_system_prompt", b"_system_prompt", "instruction_postfix", b"instruction_postfix", "instruction_prefix", b"instruction_prefix", "output_postfix", b"output_postfix", "output_prefix", b"output_prefix", "system_prompt", b"system_prompt"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instruction_postfix", b"_instruction_postfix", "_instruction_prefix", b"_instruction_prefix", "_output_postfix", b"_output_postfix", "_output_prefix", b"_output_prefix", "_system_prompt", b"_system_prompt", "architecture", b"architecture", "instruction_postfix", b"instruction_postfix", "instruction_prefix", b"instruction_prefix", "name", b"name", "output_postfix", b"output_postfix", "output_prefix", b"output_prefix", "system_prompt", b"system_prompt", "tokenizer", b"tokenizer"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instruction_postfix", b"_instruction_postfix"]) -> typing_extensions.Literal["instruction_postfix"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instruction_prefix", b"_instruction_prefix"]) -> typing_extensions.Literal["instruction_prefix"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_output_postfix", b"_output_postfix"]) -> typing_extensions.Literal["output_postfix"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_output_prefix", b"_output_prefix"]) -> typing_extensions.Literal["output_prefix"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_system_prompt", b"_system_prompt"]) -> typing_extensions.Literal["system_prompt"] | None: ...

global___Model = Model

@typing_extensions.final
class ModelName(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___ModelName = ModelName

@typing_extensions.final
class ListModelsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODELS_FIELD_NUMBER: builtins.int
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]: ...
    def __init__(
        self,
        *,
        models: collections.abc.Iterable[global___Model] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["models", b"models"]) -> None: ...

global___ListModelsResponse = ListModelsResponse

@typing_extensions.final
class Worker(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKER_NAME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    worker_name: builtins.str
    status: global___Status.ValueType
    def __init__(
        self,
        *,
        worker_name: builtins.str = ...,
        status: global___Status.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "worker_name", b"worker_name"]) -> None: ...

global___Worker = Worker

@typing_extensions.final
class ListWorkersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKERS_FIELD_NUMBER: builtins.int
    @property
    def workers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Worker]: ...
    def __init__(
        self,
        *,
        workers: collections.abc.Iterable[global___Worker] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["workers", b"workers"]) -> None: ...

global___ListWorkersResponse = ListWorkersResponse

@typing_extensions.final
class CreateInferenceWorkerRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_NAME_FIELD_NUMBER: builtins.int
    QUANTIZATION_FIELD_NUMBER: builtins.int
    WORKER_NAME_FIELD_NUMBER: builtins.int
    CLOUD_FIELD_NUMBER: builtins.int
    GPU_TYPE_FIELD_NUMBER: builtins.int
    GPU_COUNT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    model_name: builtins.str
    quantization: builtins.str
    worker_name: builtins.str
    cloud: global___Cloud.ValueType
    gpu_type: global___GpuType.ValueType
    gpu_count: builtins.int
    zone: builtins.str
    def __init__(
        self,
        *,
        model_name: builtins.str = ...,
        quantization: builtins.str = ...,
        worker_name: builtins.str | None = ...,
        cloud: global___Cloud.ValueType | None = ...,
        gpu_type: global___GpuType.ValueType | None = ...,
        gpu_count: builtins.int | None = ...,
        zone: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cloud", b"_cloud", "_gpu_count", b"_gpu_count", "_gpu_type", b"_gpu_type", "_worker_name", b"_worker_name", "_zone", b"_zone", "cloud", b"cloud", "gpu_count", b"gpu_count", "gpu_type", b"gpu_type", "worker_name", b"worker_name", "zone", b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cloud", b"_cloud", "_gpu_count", b"_gpu_count", "_gpu_type", b"_gpu_type", "_worker_name", b"_worker_name", "_zone", b"_zone", "cloud", b"cloud", "gpu_count", b"gpu_count", "gpu_type", b"gpu_type", "model_name", b"model_name", "quantization", b"quantization", "worker_name", b"worker_name", "zone", b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cloud", b"_cloud"]) -> typing_extensions.Literal["cloud"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gpu_count", b"_gpu_count"]) -> typing_extensions.Literal["gpu_count"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gpu_type", b"_gpu_type"]) -> typing_extensions.Literal["gpu_type"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_worker_name", b"_worker_name"]) -> typing_extensions.Literal["worker_name"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone", b"_zone"]) -> typing_extensions.Literal["zone"] | None: ...

global___CreateInferenceWorkerRequest = CreateInferenceWorkerRequest

@typing_extensions.final
class InferenceWorker(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKER_NAME_FIELD_NUMBER: builtins.int
    worker_name: builtins.str
    def __init__(
        self,
        *,
        worker_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["worker_name", b"worker_name"]) -> None: ...

global___InferenceWorker = InferenceWorker
