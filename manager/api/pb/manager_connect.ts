// @generated by protoc-gen-connect-es v0.8.6 with parameter "target=ts"
// @generated from file manager.proto (package haven, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateInferenceWorkerRequest, Empty, GenerateRequest, GenerateResponse, InferenceWorker, ListModelsResponse, ListWorkersResponse, SetupRequest } from "./manager_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service haven.Haven
 */
export const Haven = {
  typeName: "haven.Haven",
  methods: {
    /**
     * Setup (first time starting the manager)
     *
     * @generated from rpc haven.Haven.Setup
     */
    setup: {
      name: "Setup",
      I: SetupRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Generate text from a prompt.
     *
     * @generated from rpc haven.Haven.Generate
     */
    generate: {
      name: "Generate",
      I: GenerateRequest,
      O: GenerateResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Get the list of models and their descriptions.
     *
     * @generated from rpc haven.Haven.ListModels
     */
    listModels: {
      name: "ListModels",
      I: Empty,
      O: ListModelsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get the list of workers and their statuses.
     *
     * @generated from rpc haven.Haven.ListWorkers
     */
    listWorkers: {
      name: "ListWorkers",
      I: Empty,
      O: ListWorkersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Inference worker management.
     *
     * @generated from rpc haven.Haven.CreateInferenceWorker
     */
    createInferenceWorker: {
      name: "CreateInferenceWorker",
      I: CreateInferenceWorkerRequest,
      O: InferenceWorker,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc haven.Haven.PauseInferenceWorker
     */
    pauseInferenceWorker: {
      name: "PauseInferenceWorker",
      I: InferenceWorker,
      O: InferenceWorker,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc haven.Haven.ResumeInferenceWorker
     */
    resumeInferenceWorker: {
      name: "ResumeInferenceWorker",
      I: InferenceWorker,
      O: InferenceWorker,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc haven.Haven.DeleteInferenceWorker
     */
    deleteInferenceWorker: {
      name: "DeleteInferenceWorker",
      I: InferenceWorker,
      O: InferenceWorker,
      kind: MethodKind.Unary,
    },
  }
} as const;

