syntax = "proto3";

package worker;

service WorkerService {
	// Check health of the worker.
	rpc Health(HealthRequest) returns (HealthResponse) {}

	// Shutdown the worker.
	rpc Shutdown(ShutdownRequest) returns (ShutdownResponse) {}

	// Generate text from chat history.
	rpc ChatCompletion(ChatCompletionRequest) returns (stream CompletionResponse) {}

	// Generate text from a prompt.
	rpc Completion(CompletionRequest) returns (stream CompletionResponse) {}
}

enum WorkerStatus {
	OK = 0;
	STOPPING = 1;
	OFFLINE = 99;
}

message HealthRequest {}

message HealthResponse {
	WorkerStatus status = 1;
}

message ShutdownRequest {}

message ShutdownResponse {}

enum Role {
	ASSISTANT = 0;
	USER = 1;
}

message Message {
	Role role = 1;
	string content = 2;
}

message ChatCompletionRequest {
	repeated Message messages = 1;

	optional int32 max_tokens = 2;
	optional float top_p = 3;
	optional int32 top_k = 4;
	optional float temperature = 5;
}

message CompletionRequest {
	string prompt = 1;
	repeated string stop_tokens = 6;

	optional int32 max_tokens = 2;
	optional float top_p = 3;
	optional int32 top_k = 4;
	optional float temperature = 5;
}

message CompletionResponse {
	string text = 1;
}